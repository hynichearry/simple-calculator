{"ast":null,"code":"import{useState,useRef}from\"react\";import\"./App.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const inputRef=useRef(null);const resultRef=useRef(null);const[result,setResult]=useState(0);function plus(e){e.preventDefault();setResult(result=>result+Number(inputRef.current.value));};function minus(e){e.preventDefault();setResult(result=>result-Number(inputRef.current.value));};function times(e){e.preventDefault();setResult(result=>result*Number(inputRef.current.value));};function divide(e){e.preventDefault();setResult(result=>result/Number(inputRef.current.value));};function resetInput(){inputRef.current.value=\"\";};function resetResult(){setResult(0);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Simplest Working Calculator\"})}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"p\",{ref:resultRef,children:[\"Result :  \",result]}),/*#__PURE__*/_jsx(\"input\",{pattern:\"[0-9]\",ref:inputRef,type:\"number\",placeholder:\"Type a number\"}),/*#__PURE__*/_jsx(\"button\",{onClick:plus,children:\"add\"}),/*#__PURE__*/_jsx(\"button\",{onClick:minus,children:\"substract\"}),/*#__PURE__*/_jsx(\"button\",{onClick:times,children:\"multiply\"}),/*#__PURE__*/_jsx(\"button\",{onClick:divide,children:\"divide\"}),/*#__PURE__*/_jsx(\"button\",{onClick:resetInput,children:\"Reset Input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:resetResult,children:\"Reset Result\"})]})]});}export default App;","map":{"version":3,"names":["useState","useRef","jsx","_jsx","jsxs","_jsxs","App","inputRef","resultRef","result","setResult","plus","e","preventDefault","Number","current","value","minus","times","divide","resetInput","resetResult","className","children","ref","pattern","type","placeholder","onClick"],"sources":["/usr/src/simple-calculator/src/App.js"],"sourcesContent":["import {\n    useState,\n    useRef\n  } from \"react\"; \n  import \"./App.css\";\n  \n  function App() { \n    const inputRef = useRef(null); \n    const resultRef = useRef(null); \n    const [result, setResult] = useState(0); \n   \n    function plus(e) { \n      e.preventDefault(); \n      setResult((result) => result + Number(inputRef.current.value));\n    }; \n   \n    function minus(e) { \n        e.preventDefault(); \n      setResult((result) =>  result - Number(inputRef.current.value));\n    };\n   \n    function times(e) { \n         e.preventDefault(); \n      setResult((result) =>   result * Number(inputRef.current.value));\n    }; \n   \n    function divide(e) { \n      e.preventDefault(); \n      setResult((result) =>   result / Number(inputRef.current.value)); \n    };\n   \n    function resetInput() { \n      inputRef.current.value = \"\";\n    }; \n   \n    function resetResult() { \n      setResult(0);\n    }; \n   \n    return ( \n      <div className=\"App\"> \n        <div> \n          <h1>Simplest Working Calculator</h1> \n        </div> \n        <form> \n          <p ref={resultRef}> \n           Result :  {result} \n          </p> \n          <input\n            pattern=\"[0-9]\" \n            ref={inputRef} \n            type=\"number\" \n            placeholder=\"Type a number\" \n          /> \n          <button onClick={plus}>add</button>\n          <button onClick={minus}>substract</button>\n          <button onClick={times}>multiply</button>\n           <button onClick={divide}>divide</button>\n          <button onClick={resetInput}>Reset Input</button>\n          <button onClick={resetResult}>Reset Result</button>\n        </form> \n      </div> \n    ); \n  } \n   \n  export default App; \n  "],"mappings":"AAAA,OACIA,QAAQ,CACRC,MAAM,KACD,OAAO,CACd,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAAAC,QAAQ,CAAGN,MAAM,CAAC,IAAI,CAAC,CAC7B,KAAM,CAAAO,SAAS,CAAGP,MAAM,CAAC,IAAI,CAAC,CAC9B,KAAM,CAACQ,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CAEvC,QAAS,CAAAW,IAAIA,CAACC,CAAC,CAAE,CACfA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBH,SAAS,CAAED,MAAM,EAAKA,MAAM,CAAGK,MAAM,CAACP,QAAQ,CAACQ,OAAO,CAACC,KAAK,CAAC,CAAC,CAChE,CAAC,CAED,QAAS,CAAAC,KAAKA,CAACL,CAAC,CAAE,CACdA,CAAC,CAACC,cAAc,CAAC,CAAC,CACpBH,SAAS,CAAED,MAAM,EAAMA,MAAM,CAAGK,MAAM,CAACP,QAAQ,CAACQ,OAAO,CAACC,KAAK,CAAC,CAAC,CACjE,CAAC,CAED,QAAS,CAAAE,KAAKA,CAACN,CAAC,CAAE,CACbA,CAAC,CAACC,cAAc,CAAC,CAAC,CACrBH,SAAS,CAAED,MAAM,EAAOA,MAAM,CAAGK,MAAM,CAACP,QAAQ,CAACQ,OAAO,CAACC,KAAK,CAAC,CAAC,CAClE,CAAC,CAED,QAAS,CAAAG,MAAMA,CAACP,CAAC,CAAE,CACjBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBH,SAAS,CAAED,MAAM,EAAOA,MAAM,CAAGK,MAAM,CAACP,QAAQ,CAACQ,OAAO,CAACC,KAAK,CAAC,CAAC,CAClE,CAAC,CAED,QAAS,CAAAI,UAAUA,CAAA,CAAG,CACpBb,QAAQ,CAACQ,OAAO,CAACC,KAAK,CAAG,EAAE,CAC7B,CAAC,CAED,QAAS,CAAAK,WAAWA,CAAA,CAAG,CACrBX,SAAS,CAAC,CAAC,CAAC,CACd,CAAC,CAED,mBACEL,KAAA,QAAKiB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBpB,IAAA,QAAAoB,QAAA,cACEpB,IAAA,OAAAoB,QAAA,CAAI,6BAA2B,CAAI,CAAC,CACjC,CAAC,cACNlB,KAAA,SAAAkB,QAAA,eACElB,KAAA,MAAGmB,GAAG,CAAEhB,SAAU,CAAAe,QAAA,EAAC,YACR,CAACd,MAAM,EACf,CAAC,cACJN,IAAA,UACEsB,OAAO,CAAC,OAAO,CACfD,GAAG,CAAEjB,QAAS,CACdmB,IAAI,CAAC,QAAQ,CACbC,WAAW,CAAC,eAAe,CAC5B,CAAC,cACFxB,IAAA,WAAQyB,OAAO,CAAEjB,IAAK,CAAAY,QAAA,CAAC,KAAG,CAAQ,CAAC,cACnCpB,IAAA,WAAQyB,OAAO,CAAEX,KAAM,CAAAM,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC1CpB,IAAA,WAAQyB,OAAO,CAAEV,KAAM,CAAAK,QAAA,CAAC,UAAQ,CAAQ,CAAC,cACxCpB,IAAA,WAAQyB,OAAO,CAAET,MAAO,CAAAI,QAAA,CAAC,QAAM,CAAQ,CAAC,cACzCpB,IAAA,WAAQyB,OAAO,CAAER,UAAW,CAAAG,QAAA,CAAC,aAAW,CAAQ,CAAC,cACjDpB,IAAA,WAAQyB,OAAO,CAAEP,WAAY,CAAAE,QAAA,CAAC,cAAY,CAAQ,CAAC,EAC/C,CAAC,EACJ,CAAC,CAEV,CAEA,cAAe,CAAAjB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}